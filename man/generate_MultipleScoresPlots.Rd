% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_MultipleScoresPlots.R
\name{generate_MultipleScoresPlots}
\alias{generate_MultipleScoresPlots}
\title{Generate Multiple PCA Scores Plots}
\usage{
generate_MultipleScoresPlots(
  data,
  scorePC = list(c(1, 2), c(1, 3), c(2, 3)),
  includeQC = FALSE,
  arrangeLevels = NULL,
  scoresEllipse = TRUE,
  scoresTitle = NULL,
  scoresLegend = NULL
)
}
\arguments{
\item{data}{List. This list must be a result from the \code{performPreprocessingPeakData} function.}

\item{scorePC}{List. A list of 2-element numeric vectors, where each vector specifies
the principal components to plot. For example: list(c(1,2), c(1,3), c(2,3))
will generate 3 plots: PC1 vs PC2, PC1 vs PC3, and PC2 vs PC3.}

\item{includeQC}{Boolean. If \code{TRUE}, includes QC (Quality Control) samples in the analysis and plots.
If \code{FALSE}, uses only biological samples (BS). Defaults to \code{FALSE}.}

\item{arrangeLevels}{Vector. Determines how the groups will be arranged.
The format could be "c('group1', 'group2', ...)". Defaults to \code{NULL} which
sorts the groups in alphabetical order.}

\item{scoresEllipse}{Boolean. If \code{TRUE} (default), adds an ellipse in the scores plot.}

\item{scoresTitle}{String or Vector. The scores plot title(s). Can be a single string
(applied to all plots) or a vector of strings (one for each plot). If \code{NULL},
defaults to "PCA Scores Plot (PC{i} vs PC{j})".}

\item{scoresLegend}{String. The title in the legend section of the scores plot.
Defaults to \code{NULL} which means no legend title.}
}
\value{
Returns a list containing:
\itemize{
\item plots: A list of ggplot objects, one for each PC combination
\item plot_info: A data frame with information about each plot (PC combinations, variance explained)
\item pca_results: The PCA results object
\item data_used: The data matrix used for PCA
}
}
\description{
This function performs PCA generates multiple scores plots at once based on a list of
principal component combinations. Each combination in the list will produce
a separate scores plot.
}
\examples{
\dontrun{
# Generate 3 different scores plots
multi_plots <- generate_MultipleScoresPlots(
  data = data_from_performPreprocessingPeakData_function,
  scorePC = list(c(1,2), c(1,3), c(2,3)),
  includeQC = FALSE,
  scoresEllipse = TRUE
)

# Access individual plots
plot1 <- multi_plots$plots[[1]]  # PC1 vs PC2
plot2 <- multi_plots$plots[[2]]  # PC1 vs PC3
plot3 <- multi_plots$plots[[3]]  # PC2 vs PC3

# Display all plots
for(i in seq_along(multi_plots$plots)) {
  print(multi_plots$plots[[i]])
}
}
}
